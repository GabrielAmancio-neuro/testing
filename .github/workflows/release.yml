name: Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    branches:
    - main
  # pull_request:
  #   # Only following types are handled by the action, but one can default to all as well
  #   types: [opened, reopened, synchronize]

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Generate Release draft
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ github.ref }}
      - name: Obter ID do último draft release
        run: |
          RELEASE_ID=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                           -H "Accept: application/vnd.github.v3+json" \
                           https://api.github.com/repos/$GITHUB_REPOSITORY/releases | \
                           jq '.[] | select(.draft == true) | .id' | head -n 1)
          echo "::set-output name=id::$RELEASE_ID"

      - name: Publicar release
        if: ${{ steps.last_release.outputs.id != null }}
        run: |
          curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               -X PATCH \
               https://api.github.com/repos/$GITHUB_REPOSITORY/releases/$RELEASE_ID \
               -d '{"draft":false,"prerelease":false}'
      # - name: Create release
      #   id: create_release
      #   uses: actions/create-release@latest
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     body: |
      #       $(cat CHANGELOG.md)
      #     draft: false
      #     prerelease: false
      - name: Google Chat Notification
        run: |
            curl --location --request POST '${{ secrets.WEBHOOK }}' \
            --header 'Content-Type: application/json' \
            --data-raw '{
                "cards": [
                    {
                        "header": {
                            "title": "${{ github.repository }}",
                            "subtitle": "Release ${{ steps.last_release.outputs.id }}",
                            "imageUrl": "${{ github.event.sender.avatar_url }}"
                        },
                        "sections": [
                            {
                                "widgets": [
                                    {
                                    "textParagraph": {
                                      "text": "**Nome:** ${{ github.event.release.name }}
                                      \n**Autor:** ${{ github.event.sender.login }}
                                      \n**Tag:** ${{ github.event.release.tag_name }}
                                      \n**Data de criação:** ${{ github.event.release.created_at }}"
                                    }
                                  }
                                ]
                            }
                        ]
                    }
                ]
            }'